#[derive(Debug, PartialEq, Deserialize)]
pub(crate) enum FunCall {
    #[serde(rename = "+")] Add,
    #[serde(rename = "-")] Sub,
    #[serde(rename = "/")] Div,
    #[serde(rename = "*")] Mul,
    #[serde(rename = "%")] Mod,
    #[serde(rename = "_")] Neg,
    #[serde(rename = "==")] Eq,
    #[serde(rename = "!=")] NEq,
    #[serde(rename = ">")] Gt,
    #[serde(rename = ">=")] GEq,
    #[serde(rename = "<")] Lt,
    #[serde(rename = "<=")] LEq,
    #[serde(rename = "!")] Not,
    #[serde(rename = "&&")] And,
    #[serde(rename = "||")] Or,
    #[serde(rename = "MIN")] Min,
    #[serde(rename = "MAX")] Max,
    #[serde(rename = "?")] Has,
    #[serde(rename = "!?")] NHas,
    #[serde(rename = "L^")] Inter,
    #[serde(rename = "LIST_MIN")] LMin,
    #[serde(rename = "LIST_MAX")] LMax,
    #[serde(rename = "LIST_ALL")] All,
    #[serde(rename = "LIST_COUNT")] Cnt,
    #[serde(rename = "LIST_VALUE")] Val,
    #[serde(rename = "LIST_INVERT")] Inv,
}
